{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nvar initialState = {\n  mode: \"light\",\n  user: null,\n  token: null,\n  posts: []\n};\nexport var authSlice = createSlice({\n  name: \"auth\",\n  initialState: initialState,\n  reducers: {\n    setMode: function setMode(state) {\n      state.mode = state.mode === \"light\" ? \"dark\" : \"light\";\n    },\n    setLogin: function setLogin(state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n    },\n    setLogout: function setLogout(state) {\n      state.user = null;\n      state.token = null;\n    },\n    setFriends: function setFriends(state, action) {\n      if (state.user) {\n        state.user.friends = action.payload.friends;\n      } else {\n        console.error(\"user friends non-existent \");\n      }\n    },\n    setPosts: function setPosts(state, action) {\n      state.posts = action.payload.posts;\n    },\n    setPost: function setPost(state, action) {\n      var updatedPosts = state.posts.map(function (post) {\n        if (post._id === action.payload.post._id) return action.payload.post;\n        return post;\n      });\n      state.posts = updatedPosts;\n    }\n  }\n});\nvar _authSlice$actions = authSlice.actions,\n  setMode = _authSlice$actions.setMode,\n  setLogin = _authSlice$actions.setLogin,\n  setLogout = _authSlice$actions.setLogout,\n  setFriends = _authSlice$actions.setFriends,\n  setPosts = _authSlice$actions.setPosts,\n  setPost = _authSlice$actions.setPost;\nexport { setMode, setLogin, setLogout, setFriends, setPosts, setPost };\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","mode","user","token","posts","authSlice","name","reducers","setMode","state","setLogin","action","payload","setLogout","setFriends","friends","console","error","setPosts","setPost","updatedPosts","map","post","_id","_authSlice$actions","actions","reducer"],"sources":["B:/client/src/state/state.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\"\r\n\r\nconst initialState = {\r\n    mode: \"light\",\r\n    user: null,\r\n    token: null,\r\n    posts: [],\r\n}\r\n\r\nexport const authSlice = createSlice({\r\n    name: \"auth\",\r\n    initialState,\r\n    reducers: {\r\n      setMode: (state) => {\r\n        state.mode = state.mode === \"light\" ? \"dark\" : \"light\";\r\n      },\r\n      setLogin: (state, action) => {\r\n        state.user = action.payload.user;\r\n        state.token = action.payload.token;\r\n      },\r\n      setLogout: (state) => {\r\n        state.user = null;\r\n        state.token = null;\r\n      },\r\n      setFriends: (state, action) => {\r\n        if (state.user) {\r\n          state.user.friends = action.payload.friends;\r\n        } else {\r\n          console.error(\"user friends non-existent \");\r\n        }\r\n      },\r\n      setPosts: (state, action) => {\r\n        state.posts = action.payload.posts;\r\n      },\r\n      setPost: (state, action) => {\r\n        const updatedPosts = state.posts.map((post) => {\r\n          if (post._id === action.payload.post._id) return action.payload.post;\r\n          return post;\r\n        });\r\n        state.posts = updatedPosts;\r\n      },\r\n    },\r\n  });\r\n  \r\n  export const { setMode, setLogin, setLogout, setFriends, setPosts, setPost } =\r\n    authSlice.actions;\r\n  export default authSlice.reducer;"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAE5C,IAAMC,YAAY,GAAG;EACjBC,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,IAAMC,SAAS,GAAGN,WAAW,CAAC;EACjCO,IAAI,EAAE,MAAM;EACZN,YAAY,EAAZA,YAAY;EACZO,QAAQ,EAAE;IACRC,OAAO,EAAE,SAAAA,QAACC,KAAK,EAAK;MAClBA,KAAK,CAACR,IAAI,GAAGQ,KAAK,CAACR,IAAI,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;IACxD,CAAC;IACDS,QAAQ,EAAE,SAAAA,SAACD,KAAK,EAAEE,MAAM,EAAK;MAC3BF,KAAK,CAACP,IAAI,GAAGS,MAAM,CAACC,OAAO,CAACV,IAAI;MAChCO,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACC,OAAO,CAACT,KAAK;IACpC,CAAC;IACDU,SAAS,EAAE,SAAAA,UAACJ,KAAK,EAAK;MACpBA,KAAK,CAACP,IAAI,GAAG,IAAI;MACjBO,KAAK,CAACN,KAAK,GAAG,IAAI;IACpB,CAAC;IACDW,UAAU,EAAE,SAAAA,WAACL,KAAK,EAAEE,MAAM,EAAK;MAC7B,IAAIF,KAAK,CAACP,IAAI,EAAE;QACdO,KAAK,CAACP,IAAI,CAACa,OAAO,GAAGJ,MAAM,CAACC,OAAO,CAACG,OAAO;MAC7C,CAAC,MAAM;QACLC,OAAO,CAACC,KAAK,CAAC,4BAA4B,CAAC;MAC7C;IACF,CAAC;IACDC,QAAQ,EAAE,SAAAA,SAACT,KAAK,EAAEE,MAAM,EAAK;MAC3BF,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACC,OAAO,CAACR,KAAK;IACpC,CAAC;IACDe,OAAO,EAAE,SAAAA,QAACV,KAAK,EAAEE,MAAM,EAAK;MAC1B,IAAMS,YAAY,GAAGX,KAAK,CAACL,KAAK,CAACiB,GAAG,CAAC,UAACC,IAAI,EAAK;QAC7C,IAAIA,IAAI,CAACC,GAAG,KAAKZ,MAAM,CAACC,OAAO,CAACU,IAAI,CAACC,GAAG,EAAE,OAAOZ,MAAM,CAACC,OAAO,CAACU,IAAI;QACpE,OAAOA,IAAI;MACb,CAAC,CAAC;MACFb,KAAK,CAACL,KAAK,GAAGgB,YAAY;IAC5B;EACF;AACF,CAAC,CAAC;AAAC,IAAAI,kBAAA,GAGDnB,SAAS,CAACoB,OAAO;EADJjB,OAAO,GAAAgB,kBAAA,CAAPhB,OAAO;EAAEE,QAAQ,GAAAc,kBAAA,CAARd,QAAQ;EAAEG,SAAS,GAAAW,kBAAA,CAATX,SAAS;EAAEC,UAAU,GAAAU,kBAAA,CAAVV,UAAU;EAAEI,QAAQ,GAAAM,kBAAA,CAARN,QAAQ;EAAEC,OAAO,GAAAK,kBAAA,CAAPL,OAAO;AAAA,SAAAX,OAAA,EAAAE,QAAA,EAAAG,SAAA,EAAAC,UAAA,EAAAI,QAAA,EAAAC,OAAA;AAE1E,eAAed,SAAS,CAACqB,OAAO"},"metadata":{},"sourceType":"module"}